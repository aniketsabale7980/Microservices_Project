server:
  port: 8081

spring:
  application:
    name: USER-SERVICE
  profiles:
    active: dev
    
      
  datasource:
    name: user
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=microservices
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    
  config:
   import: configserver:http://localhost:8085 
#eureka:

#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-32675440.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:   #clientRegistrationId
            provider: okta
            authorization-grant-type: client_credentials
            scope:
            - internal 
            client-id: 0oacm925icvP34MSY5d7
            client-secret: _XjSMavrqg8vui0kDYHPaWyMfMe2ydU9LRYXFzUqVMYGVRBVjTROjn0MA6ZZ6j5p           
        provider:
          okta:
           issuer-uri: https://dev-32675440.okta.com/oauth2/default
           
            
          
          

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
      web:
        exposure:
          include: health
          
  endpoint:
    health:
      show-details: always
      
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:          #circuitBreaker name
        register-health-indicator: true
        event-consumer-buffer-size: 20
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count-based
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s  #good - 2s
       
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
        
okta:
  oauth2:
    issuer: https://dev-32675440.okta.com/oauth2/default
    audience: api://default
    client-id: 0oacm925icvP34MSY5d7
    client-secret: _XjSMavrqg8vui0kDYHPaWyMfMe2ydU9LRYXFzUqVMYGVRBVjTROjn0MA6ZZ6j5p
    scopes:
    - openid,profile,email,offline_access
      
    